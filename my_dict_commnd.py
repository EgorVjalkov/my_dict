command_dict_git = [
    [['git diff', 'выводит изменения текущей версии MODIFIED файлов'], 
        ['--staged', 'выводит изменения текущей версии STAGED файлов']],
    [['git log', 'выводит список коммитов'], 
        ['-p', 'выводит изменения для каждого коммита'], 
        ['--online', 'выводит список коммитов (hash, massage)'],
        ['--graph', 'выводит список коммитов со связями']],
    [['git show', 'выводит все изменения в рамках последнего коммита'],
        ['<hash>', 'выводит все изменения в рамках <hash> коммита']], 
    [['git blame <path>', 'выводит хэш, автора и дату коммита каждой строки этого файла']],
    [['git grep <str>', 'принимает строку, ищет и выводит совпадение с указанной строкой в каждом файле']],
    [['git revert <hash>', 'принимает хэш коммита', 'отменяет изменения этого коммита, создает новый коммит']],
    ['git reset HEAD~<n>', 'принимает целое число', 'отправляет изменения последних n-коммитов в рабочую директорию'],
    ['git reset --hard HEAD~<>', 'принимает целое число', 'удаляет изменения последних n-коммитов'],
    ['git commit --amend', 'no input', 'откатывает последний коммит и выполняет новый с новыми данными'],
    ['git commit <path> -m <str>', 'принимает путь до файла и строку' , 'добавляет в индекс и коммитит MODIFIED файл, записывает коммент'],
    ['git commit -m <str>', 'принимает строку', 'коммитит STAGED файлы, записывает коммент'],
    ['git commit -am <str>', 'принимает строку', 'коммитит MODIFIED файлы, минуя индекс, записывает коммент'],
    ['git add <path>', 'принимает путь до файла', 'добавляет в индекс этот файл'],
    ['git add -i', 'может принять путь до файла', 'открывает интерактивный режим добавления в индекс'],
    ['git checkout <hash>' 'принимает хэш коммита', 'переключается на  этот коммит'],
    ['git checkout main' 'no input', 'переключается на последний коммит ветки main'],
    ['git switch <branch>', 'принимает имя ветки', 'переключается на эту ветку'],
    ['git branch', 'no input', 'выводит название текущей ветки'],
    ['git stash', 'no input', 'сохраняет все MODIFUED и STAGED в хранилище незавершенных изменений'],
    ['git stash pop', 'no input', 'возвращает в рабочую директорию файлы из хранилища и удаляет их'],
    ['git stash -u', 'no input', 'сохраняет MODIFUED, STAGED и UNTRACKED в хранилище'],
    ['git stash -a', 'no input', 'сохраняет MODIFUED, STAGED, UNTRACKED и IGNORED в хранилище']]